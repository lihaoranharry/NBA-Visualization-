xlab("team name")+
scale_y_continuous(breaks = pretty(df1$count),labels = abs(pretty(df1$count)))+
theme_scientific()
library(ggplot2)
#devtools::install_github('bart6114/artyfarty')
library('artyfarty')
clutch = read.csv('/Users/nihaozheng/Desktop/Visualization/project/clutch_team/fetched.csv')
df1 = clutch[,c('GP','W','team')]
df1= gather(df1,type,count,-team)
df1$count <-  ifelse(df1$type =="W",df1$count*(-1),df1$count)
#df1 <- within(df1, team <- factor(team, levels=names(sort(count,  decreasing=TRUE))))
df1 %>% ggplot(aes(x=team, y=count, fill=type))+
geom_bar(stat="identity",position="identity")+
xlab("number of games")+ylab("name of teams")+
scale_fill_manual(name="type of games",values = c("#FFA373","#50486D"))+
coord_flip()+ggtitle("number of games v.s number of wins")+
geom_hline(yintercept=0)+
ylab("number of games")+
xlab("team name")+
scale_y_continuous(breaks = pretty(df1$count),labels = abs(pretty(df1$count)))+
theme_scientific()
library(ggplot2)
#devtools::install_github('bart6114/artyfarty')
library('artyfarty')
clutch = read.csv('/Users/nihaozheng/Desktop/Visualization/project/clutch_team/fetched.csv')
#number of games vs number of wins
df1 = clutch[,c('GP','W','team')]
df1= gather(df1,type,count,-team)
df1$count <-  ifelse(df1$type =="W",df1$count*(-1),df1$count)
#df1 <- within(df1, team <- factor(team, levels=names(sort(count,  decreasing=TRUE))))
df1 %>% ggplot(aes(x=team, y=count, fill=type))+
geom_bar(stat="identity",position="identity")+
xlab("number of games")+ylab("name of teams")+
scale_fill_manual(name="type of games",values = c("#FFA373","#50486D"))+
coord_flip()+ggtitle("number of games v.s number of wins")+
geom_hline(yintercept=0)+
ylab("number of games")+
xlab("team name")+
scale_y_continuous(breaks = pretty(df1$count),labels = abs(pretty(df1$count)))+
theme_scientific()
#Personal fouls (PF) and turnovers (TOV)
df1 = clutch[,c('PF','TOV','team')]
df1= gather(df1,type,count,-team)
df1$count <-  ifelse(df1$type =="PF",df1$count*(-1),df1$count)
#df1 <- within(df1, team <- factor(team, levels=names(sort(count,  decreasing=TRUE))))
df1 %>% ggplot(aes(x=team, y=count, fill=type))+
geom_bar(stat="identity",position="identity")+
xlab("counts")+ylab("name of teams")+
scale_fill_manual(values = c("#FFA373","#50486D"))+
coord_flip()+ggtitle("Personal fouls (PF) and turnovers (TOV)")+
geom_hline(yintercept=0)+
ylab("counts")+
xlab("team name")+
scale_y_continuous(breaks = pretty(df1$count),labels = abs(pretty(df1$count)))+
theme_scientific()
levels(df1$team)
temp = df1[df1$type='PF',]
temp = df1[df1$type=='PF',]
temp
reorder(temp$team,temp$count)
as.character( reorder(temp$team,temp$count))
new_levels = as.character( reorder(temp$team,temp$count))
df1$team = factor(df1$team,levels = new_levels)
levels(df1$team)
df1 %>% ggplot(aes(x=team, y=count, fill=type))+
geom_bar(stat="identity",position="identity")+
xlab("counts")+ylab("name of teams")+
scale_fill_manual(values = c("#FFA373","#50486D"))+
coord_flip()+ggtitle("Personal fouls (PF) and turnovers (TOV)")+
geom_hline(yintercept=0)+
ylab("counts")+
xlab("team name")+
scale_y_continuous(breaks = pretty(df1$count),labels = abs(pretty(df1$count)))+
theme_scientific()
new_order
new_levels
temp
reorder(temp$team,temp$count)
temp[order(temp$count),]
as.character(temp[order(temp$count),])
as.character(temp[order(temp$count),]$team)
new_levels =  as.character(temp[order(temp$count),]$team)
df1$team=factor(df1$team,new_levels)
df1 %>% ggplot(aes(x=team, y=count, fill=type))+
geom_bar(stat="identity",position="identity")+
xlab("counts")+ylab("name of teams")+
scale_fill_manual(values = c("#FFA373","#50486D"))+
coord_flip()+ggtitle("Personal fouls (PF) and turnovers (TOV)")+
geom_hline(yintercept=0)+
ylab("counts")+
xlab("team name")+
scale_y_continuous(breaks = pretty(df1$count),labels = abs(pretty(df1$count)))+
theme_scientific()
df1 = clutch[,c('PF','TOV','team')]
df1= gather(df1,type,count,-team)
df1$count <-  ifelse(df1$type =="PF",df1$count*(-1),df1$count)
new_levels=  as.character(temp[order(-temp$count),]$team)
df1$team = factor(df1$team,levels=new_levels)
#df1 <- within(df1, team <- factor(team, levels=names(sort(count,  decreasing=TRUE))))
df1 %>% ggplot(aes(x=team, y=count, fill=type))+
geom_bar(stat="identity",position="identity")+
xlab("counts")+ylab("name of teams")+
scale_fill_manual(values = c("#FFA373","#50486D"))+
coord_flip()+ggtitle("Personal fouls (PF) and turnovers (TOV)")+
geom_hline(yintercept=0)+
ylab("counts")+
xlab("team name")+
scale_y_continuous(breaks = pretty(df1$count),labels = abs(pretty(df1$count)))+
theme_scientific()
df1 = clutch[,c('GP','W','team')]
df1= gather(df1,type,count,-team)
df1$count <-  ifelse(df1$type =="W",df1$count*(-1),df1$count)
temp = df1[df1$type=='W',]
new_levels=  as.character(temp[order(-temp$count),]$team)
df1$team = factor(df1$team,levels=new_levels)
#df1 <- within(df1, team <- factor(team, levels=names(sort(count,  decreasing=TRUE))))
df1 %>% ggplot(aes(x=team, y=count, fill=type))+
geom_bar(stat="identity",position="identity")+
xlab("number of games")+ylab("name of teams")+
scale_fill_manual(name="type of games",values = c("#FFA373","#50486D"))+
coord_flip()+ggtitle("number of games v.s number of wins")+
geom_hline(yintercept=0)+
ylab("number of games")+
xlab("team name")+
scale_y_continuous(breaks = pretty(df1$count),labels = abs(pretty(df1$count)))+
theme_scientific()
library(ggplot2)
#devtools::install_github('bart6114/artyfarty')
library('artyfarty')
clutch = read.csv('/Users/nihaozheng/Desktop/Visualization/project/clutch_team/fetched.csv')
#number of games vs number of wins
df1 = clutch[,c('GP','W','team')]
df1= gather(df1,type,count,-team)
df1$count <-  ifelse(df1$type =="W",df1$count*(-1),df1$count)
temp = df1[df1$type=='GP',]
new_levels=  as.character(temp[order(temp$count),]$team)
df1$team = factor(df1$team,levels=new_levels)
#df1 <- within(df1, team <- factor(team, levels=names(sort(count,  decreasing=TRUE))))
df1 %>% ggplot(aes(x=team, y=count, fill=type))+
geom_bar(stat="identity",position="identity")+
xlab("number of games")+ylab("name of teams")+
scale_fill_manual(name="type of games",values = c("#FFA373","#50486D"))+
coord_flip()+ggtitle("number of games v.s number of wins")+
geom_hline(yintercept=0)+
ylab("number of games")+
xlab("team name")+
scale_y_continuous(breaks = pretty(df1$count),labels = abs(pretty(df1$count)))+
theme_scientific()
#Personal fouls (PF) and turnovers (TOV)
df1 = clutch[,c('PF','TOV','team')]
df1= gather(df1,type,count,-team)
df1$count <-  ifelse(df1$type =="PF",df1$count*(-1),df1$count)
temp = temp = df1[df1$type=='TOV',]
new_levels=  as.character(temp[order(-temp$count),]$team)
df1$team = factor(df1$team,levels=new_levels)
#df1 <- within(df1, team <- factor(team, levels=names(sort(count,  decreasing=TRUE))))
df1 %>% ggplot(aes(x=team, y=count, fill=type))+
geom_bar(stat="identity",position="identity")+
xlab("counts")+ylab("name of teams")+
scale_fill_manual(values = c("#FFA373","#50486D"))+
coord_flip()+ggtitle("Personal fouls (PF) and turnovers (TOV)")+
geom_hline(yintercept=0)+
ylab("counts")+
xlab("team name")+
scale_y_continuous(breaks = pretty(df1$count),labels = abs(pretty(df1$count)))+
theme_scientific()
#Personal fouls (PF) and turnovers (TOV)
df1 = clutch[,c('PF','TOV','team')]
df1= gather(df1,type,count,-team)
df1$count <-  ifelse(df1$type =="PF",df1$count*(-1),df1$count)
temp = temp = df1[df1$type=='TOV',]
new_levels=  as.character(temp[order(temp$count),]$team)
df1$team = factor(df1$team,levels=new_levels)
#df1 <- within(df1, team <- factor(team, levels=names(sort(count,  decreasing=TRUE))))
df1 %>% ggplot(aes(x=team, y=count, fill=type))+
geom_bar(stat="identity",position="identity")+
xlab("counts")+ylab("name of teams")+
scale_fill_manual(values = c("#FFA373","#50486D"))+
coord_flip()+ggtitle("Personal fouls (PF) and turnovers (TOV)")+
geom_hline(yintercept=0)+
ylab("counts")+
xlab("team name")+
scale_y_continuous(breaks = pretty(df1$count),labels = abs(pretty(df1$count)))+
theme_scientific()
View(clutch)
#Field goal percentage (FG%) vs 3 Points field goal percentage (3P%) vs Free throw percentage (FT%)
df1 = clutch[,c('FG_PCT','FG3_PCT','FT_PCT','team')]
df1= gather(df1,type,count,-team)
df1$count <-  ifelse(df1$type =="FT_PCT",df1$count*(-1),df1$count)
temp = temp = df1[df1$type=='FG_PCT',]
new_levels=  as.character(temp[order(temp$count),]$team)
df1$team = factor(df1$team,levels=new_levels)
#df1 <- within(df1, team <- factor(team, levels=names(sort(count,  decreasing=TRUE))))
df1 %>% ggplot(aes(x=team, y=count, fill=type))+
geom_bar(stat="identity",position="identity")+
xlab("counts")+ylab("name of teams")+
scale_fill_manual(values = pal("dataroots"))+
coord_flip()+ggtitle("FG%,3PT%,FT%")+
geom_hline(yintercept=0)+
ylab("counts")+
xlab("team name")+
scale_y_continuous(breaks = pretty(df1$count),labels = abs(pretty(df1$count)))+
theme_scientific()
#Field goal percentage (FG%) vs 3 Points field goal percentage (3P%) vs Free throw percentage (FT%)
df1 = clutch[,c('FG_PCT','FG3_PCT','FT_PCT','team')]
df1= gather(df1,type,count,-team)
df1$count <-  ifelse(df1$type =="FT_PCT",df1$count*(-1),df1$count)
temp = temp = df1[df1$type=='FG_PCT',]
new_levels=  as.character(temp[order(temp$count),]$team)
df1$team = factor(df1$team,levels=new_levels)
#df1 <- within(df1, team <- factor(team, levels=names(sort(count,  decreasing=TRUE))))
df1 %>% ggplot(aes(x=team, y=count, fill=type))+
geom_bar(stat="identity",position="identity")+
xlab("counts")+ylab("name of teams")+
scale_fill_manual(values = pal("five38"))+
coord_flip()+ggtitle("FG%,3PT%,FT%")+
geom_hline(yintercept=0)+
ylab("counts")+
xlab("team name")+
scale_y_continuous(breaks = pretty(df1$count),labels = abs(pretty(df1$count)))+
theme_scientific()
#Field goal percentage (FG%) vs 3 Points field goal percentage (3P%) vs Free throw percentage (FT%)
df1 = clutch[,c('FG_PCT','FG3_PCT','FT_PCT','team')]
df1= gather(df1,type,count,-team)
df1$count <-  ifelse(df1$type =="FG3_PCT",df1$count*(-1),df1$count)
temp = temp = df1[df1$type=='FG_PCT',]
new_levels=  as.character(temp[order(temp$count),]$team)
df1$team = factor(df1$team,levels=new_levels)
#df1 <- within(df1, team <- factor(team, levels=names(sort(count,  decreasing=TRUE))))
df1 %>% ggplot(aes(x=team, y=count, fill=type))+
geom_bar(stat="identity",position="identity")+
xlab("counts")+ylab("name of teams")+
scale_fill_manual(values = pal("five38"))+
coord_flip()+ggtitle("FG%,3PT%,FT%")+
geom_hline(yintercept=0)+
ylab("counts")+
xlab("team name")+
scale_y_continuous(breaks = pretty(df1$count),labels = abs(pretty(df1$count)))+
theme_scientific()
#Field goal percentage (FG%) vs 3 Points field goal percentage (3P%) vs Free throw percentage (FT%)
df1 = clutch[,c('FG_PCT','FG3_PCT','FT_PCT','team')]
df1= gather(df1,type,count,-team)
df1$count <-  ifelse(df1$type =="FG3_PCT",df1$count*(-1),df1$count)
temp = temp = df1[df1$type=='FG_PCT',]
new_levels=  as.character(temp[order(temp$count),]$team)
df1$team = factor(df1$team,levels=new_levels)
df1 %>% ggplot(aes(x=team, y=count, fill=type))+
geom_bar(stat="identity",position="identity")+
xlab("counts")+ylab("name of teams")+
scale_fill_manual(values = pal("five38"))+
coord_flip()+ggtitle("FG%,3PT%,FT%")+
geom_hline(yintercept=0)+
ylab("counts")+
xlab("team name")+
scale_y_continuous(breaks = pretty(df1$count),labels = abs(pretty(df1$count)))+
theme_scientific()
library(ggplot2)
#devtools::install_github('bart6114/artyfarty')
library('artyfarty')
clutch = read.csv('/Users/nihaozheng/Desktop/Visualization/project/clutch_team/fetched.csv')
#number of games played vs number of wins
df1 = clutch[,c('GP','W','team')]
df1= gather(df1,type,count,-team)
df1$count <-  ifelse(df1$type =="W",df1$count*(-1),df1$count)
temp = df1[df1$type=='GP',]
new_levels=  as.character(temp[order(temp$count),]$team)
df1$team = factor(df1$team,levels=new_levels)
#df1 <- within(df1, team <- factor(team, levels=names(sort(count,  decreasing=TRUE))))
df1 %>% ggplot(aes(x=team, y=count, fill=type))+
geom_bar(stat="identity",position="identity")+
xlab("number of games")+ylab("name of teams")+
scale_fill_manual(name="type of games",values = c("#FFA373","#50486D"))+
coord_flip()+ggtitle("number of games played (GP) v.s number of wins (W)")+
geom_hline(yintercept=0)+
ylab("number of games")+
xlab("team name")+
scale_y_continuous(breaks = pretty(df1$count),labels = abs(pretty(df1$count)))+
theme_scientific()
#Personal fouls (PF) and turnovers (TOV)
df1 = clutch[,c('PF','TOV','team')]
df1= gather(df1,type,count,-team)
df1$count <-  ifelse(df1$type =="PF",df1$count*(-1),df1$count)
temp = temp = df1[df1$type=='TOV',]
new_levels=  as.character(temp[order(temp$count),]$team)
df1$team = factor(df1$team,levels=new_levels)
#df1 <- within(df1, team <- factor(team, levels=names(sort(count,  decreasing=TRUE))))
df1 %>% ggplot(aes(x=team, y=count, fill=type))+
geom_bar(stat="identity",position="identity")+
xlab("counts")+ylab("name of teams")+
scale_fill_manual(values = c("#FFA373","#50486D"))+
coord_flip()+ggtitle("Personal fouls (PF) and turnovers (TOV)")+
geom_hline(yintercept=0)+
ylab("counts")+
xlab("team name")+
scale_y_continuous(breaks = pretty(df1$count),labels = abs(pretty(df1$count)))+
theme_scientific()
#Field goal percentage (FG%) vs 3 Points field goal percentage (3P%) vs Free throw percentage (FT%)
df1 = clutch[,c('FG_PCT','FG3_PCT','FT_PCT','team')]
df1= gather(df1,type,count,-team)
df1$count <-  ifelse(df1$type =="FG3_PCT",df1$count*(-1),df1$count)
temp = temp = df1[df1$type=='FG_PCT',]
new_levels=  as.character(temp[order(temp$count),]$team)
df1$team = factor(df1$team,levels=new_levels)
df1 %>% ggplot(aes(x=team, y=count, fill=type))+
geom_bar(stat="identity",position="identity")+
xlab("counts")+ylab("name of teams")+
scale_fill_manual(values = pal("five38"))+
coord_flip()+ggtitle("FG%,3PT%,FT%")+
geom_hline(yintercept=0)+
ylab("counts")+
xlab("team name")+
scale_y_continuous(breaks = pretty(df1$count),labels = abs(pretty(df1$count)))+
theme_scientific()
#Field goal percentage (FG%) vs 3 Points field goal percentage (3P%) vs Free throw percentage (FT%)
df1 = clutch[,c('FG_PCT','FG3_PCT','FT_PCT','team')]
df1= gather(df1,type,count,-team)
df1$count <-  ifelse(df1$type =="FT_PCT",df1$count*(-1),df1$count)
temp = temp = df1[df1$type=='FG_PCT',]
new_levels=  as.character(temp[order(temp$count),]$team)
df1$team = factor(df1$team,levels=new_levels)
#df1 <- within(df1, team <- factor(team, levels=names(sort(count,  decreasing=TRUE))))
df1 %>% ggplot(aes(x=team, y=count, fill=type))+
geom_bar(stat="identity",position="identity")+
xlab("counts")+ylab("name of teams")+
scale_fill_manual(values = pal("five38"))+
coord_flip()+ggtitle("FG%,3PT%,FT%")+
geom_hline(yintercept=0)+
ylab("counts")+
xlab("team name")+
scale_y_continuous(breaks = pretty(df1$count),labels = abs(pretty(df1$count)))+
theme_scientific()
install.packages(twitterR)
install.packages("twitterR")
install.packages("twitteR")
library("twitteR")
s <- searchTwitter('#emoticons', cainfo="cacert.pem")
install.packages("rgdal")
install.packages("png")
library(rgdal)
library(png)
# load icons in PNG format
iconfile1 <- download.file('http://icons.iconarchive.com/icons/oxygen-icons.org/oxygen/256/Status-weather-clouds-icon.png', destfile = 'icon1.png', mode = 'wb')
icon1 <- readPNG('icon1.png')
icon1
plot(icon1)
clutch = read.csv('/Users/nihaozheng/Desktop/Visualization/project/clutch_team/fetched.csv')
View(clutch)
clutch = read.csv('/Users/nihaozheng/Desktop/Visualization/project/clutch_team/fetched.csv')
View(clutch)
# divergent plot
df1 = clutch[,c('PCT_PTS_2PT','PCT_PTS_3PT','PCT_PTS_FT','team')]
df1= gather(df1,type,count,-team)
df1 = clutch[,c('PCT_PTS_2PT','PCT_PTS_3PT','PCT_PTS_FT','team')]
df1= gather(df1,type,count,-team)
df1$count <-  ifelse(df1$type =="PCT_PTS_2PT",df1$count*(-1),df1$count)
temp = temp = df1[df1$type=='PCT_PTS_2PT',]
new_levels=  as.character(temp[order(temp$count),]$team)
df1 %>% ggplot(aes(x=team, y=count, fill=type))+
geom_bar(stat="identity",position="identity")+
xlab("counts")+ylab("name of teams")+
scale_fill_manual(values = pal("five38"))+
coord_flip()+ggtitle("FG%,3PT%,FT%")+
geom_hline(yintercept=0)+
ylab("counts")+
xlab("team name")+
scale_y_continuous(breaks = pretty(df1$count),labels = abs(pretty(df1$count)))+
theme_scientific()
df1 = clutch[,c('PCT_PTS_2PT','PCT_PTS_3PT','PCT_PTS_FT','team')]
df1= gather(df1,type,count,-team)
#df1$count <-  ifelse(df1$type =="PCT_PTS_2PT",df1$count*(-1),df1$count)
temp = temp = df1[df1$type=='PCT_PTS_2PT',]
new_levels=  as.character(temp[order(temp$count),]$team)
df1 %>% ggplot(aes(x=team, y=ifelse(type=='PCT_PTS_2PT', -count, count), fill=type))+
geom_col()+
xlab("counts")+ylab("name of teams")+
scale_fill_manual(values = pal("five38"))+
coord_flip()+ggtitle("FG%,3PT%,FT%")+
geom_hline(yintercept=0)+
ylab("counts")+
xlab("team name")+
scale_y_continuous(breaks = pretty(df1$count),labels = abs(pretty(df1$count)))+
theme_scientific()
df1 = clutch[,c('PCT_PTS_2PT','PCT_PTS_3PT','PCT_PTS_FT','team')]
df1= gather(df1,type,count,-team)
df1$count <-  ifelse(df1$type =="PCT_PTS_2PT",df1$count*(-1),df1$count)
temp = temp = df1[df1$type=='PCT_PTS_2PT',]
new_levels=  as.character(temp[order(temp$count),]$team)
df1 %>% ggplot(aes(x=team, y=count, fill=type))+
geom_col()+
xlab("counts")+ylab("name of teams")+
scale_fill_manual(values = pal("five38"))+
coord_flip()+ggtitle("FG%,3PT%,FT%")+
geom_hline(yintercept=0)+
ylab("counts")+
xlab("team name")+
scale_y_continuous(breaks = pretty(df1$count),labels = abs(pretty(df1$count)))+
theme_scientific()
df1 = clutch[,c('PCT_PTS_2PT','PCT_PTS_3PT','PCT_PTS_FT','team')]
df1= gather(df1,type,count,-team)
df1$count <-  ifelse(df1$type =="PCT_PTS_2PT",df1$count*(-1),df1$count)
temp =  df1[df1$type=='PCT_PTS_2PT',]
new_levels=  as.character(temp[order(temp$count),]$team)
df1 %>% ggplot(aes(x=team, y=count, fill=type))+
geom_col()+
xlab("counts")+ylab("name of teams")+
scale_fill_manual(values = pal("five38"))+
coord_flip()+ggtitle("FG%,3PT%,FT%")+
geom_hline(yintercept=0)+
ylab("counts")+
xlab("team name")+
scale_y_continuous(breaks = pretty(df1$count),labels = abs(pretty(df1$count)))+
theme_scientific()
# divergent plot
df1 = clutch[,c('PCT_PTS_2PT','PCT_PTS_3PT','PCT_PTS_FT','team')]
df1= gather(df1,type,count,-team)
temp =  df1[df1$type=='PCT_PTS_2PT',]
new_levels=  as.character(temp[order(temp$count),]$team)
df1$team = factor(df1$team,levels=new_levels)
df1$count <-  ifelse(df1$type =="PCT_PTS_2PT",df1$count*(-1),df1$count)
df1 %>% ggplot(aes(x=team, y=count, fill=type))+
geom_col()+
xlab("counts")+ylab("name of teams")+
scale_fill_manual(values = pal("five38"))+
coord_flip()+ggtitle("FG%,3PT%,FT%")+
geom_hline(yintercept=0)+
ylab("counts")+
xlab("team name")+
scale_y_continuous(breaks = pretty(df1$count),labels = abs(pretty(df1$count)))+
theme_scientific()
df1 %>% ggplot(aes(x=team, y=count, fill=type))+
geom_col()+
xlab("percentage")+ylab("name of teams")+
scale_fill_manual(values = pal("five38"))+
coord_flip()+ggtitle("2PT%,3PT%,FT%")+
geom_hline(yintercept=0)+
ylab("percentage")+
xlab("team name")+
scale_y_continuous(breaks = pretty(df1$count),labels = abs(pretty(df1$count)))+
theme_scientific()
View(clutch)
df1 = clutch[,c('OFF_RATING','DEF_RATING','team')]
ggplot(df1,aes(x=OFF_RATING,y=DEF_RATING))+geom_point()
ggplot(df1,aes(x=OFF_RATING,y=DEF_RATING))+geom_point()+
scale_y_reverse()+scale_x_reverse()
#scatter
df1 = clutch[,c('OFF_RATING','DEF_RATING','team')]
ggplot(df1,aes(x=OFF_RATING,y=DEF_RATING))+geom_point()+
scale_y_reverse()
library(png)
library(ggplot2)
library(gridGraphics)
setwd("/Users/nihaozheng/Desktop/Visualization/project/clutch_team/logo")
install.packages("gridGraphics")
library(png)
library(ggplot2)
library(gridGraphics)
setwd("/Users/nihaozheng/Desktop/Visualization/project/clutch_team/logo")
img1 <- readPNG("ATL.png")
g1 <- rasterGrob(img1, interpolate=FALSE)
ggplot(df1, aes(x=OFF_RATING,y=DEF_RATING)) +
mapply(function(xx, yy)
annotation_raster(img, xmin=xx-1, xmax=xx+1, ymin=yy-0.2, ymax=yy+0.2),
df1$OFF_RATING, df1$DEF_RATING)
img <- readPNG("ATL.png")
ggplot(df1, aes(x=OFF_RATING,y=DEF_RATING)) +
mapply(function(xx, yy)
annotation_raster(img, xmin=xx-1, xmax=xx+1, ymin=yy-0.2, ymax=yy+0.2),
df1$OFF_RATING, df1$DEF_RATING)
img <- readPNG("ATL.png")
g1 <- rasterGrob(img1, interpolate=FALSE)
ggplot(df1, aes(x=OFF_RATING,y=DEF_RATING)) +
mapply(function(xx, yy)
annotation_raster(img, xmin=xx-1, xmax=xx+1, ymin=yy-0.2, ymax=yy+0.2),
df1$OFF_RATING, df1$DEF_RATING)
ggplot(df1, aes(x=OFF_RATING,y=DEF_RATING)) +
mapply(function(xx, yy)
annotation_raster(img, xmin=xx-10, xmax=xx+10, ymin=yy-2, ymax=yy+2),
df1$OFF_RATING, df1$DEF_RATING)
img <- readPNG(system.file("img", "Rlogo.png", package="png"))
ggplot(mtcars, aes(mpg, wt)) +
mapply(function(xx, yy)
annotation_raster(img, xmin=xx-1, xmax=xx+1, ymin=yy-0.2, ymax=yy+0.2),
mtcars$mpg, mtcars$wt)
img <- readPNG(system.file("img", "Rlogo.png", package="png"))
g <- rasterGrob(img, interpolate=FALSE)
ggplot(mtcars, aes(mpg, wt)) +
mapply(function(xx, yy, ii) {
g$name <- ii
annotation_custom(g, xmin=xx-1, xmax=xx+1, ymin=yy-0.2, ymax=yy+0.2)},
mtcars$mpg, mtcars$wt, seq_len(nrow(mtcars)))
img <- readPNG("ATL.png")
g <- rasterGrob(img, interpolate=FALSE)
g
img <- readPNG("ATL.png")
g <- rasterGrob(img, interpolate=FALSE)
ggplot(df1, aes(x=OFF_RATING,y=DEF_RATING)) +
mapply(function(xx, yy, ii) {
g$name <- ii
annotation_custom(g, xmin=xx-1, xmax=xx+1, ymin=yy-0.2, ymax=yy+0.2)},
df1$OFF_RATING, df1$DEF_RATING, seq_len(nrow(df1)))
install.packages("ggimage")
library(ggimage)
devtools::install_github("GuangchuangYu/ggimage")
library(ggimage)
setRepositories(ind=1:2)
install.packages("ggimage")
library(ggimage)
devtools::install_github("GuangchuangYu/ggimage")
setRepositories(ind = 1:2)
install.packages("ggimage")
install.packages("base2grob")
devtools::install_github("GuangchuangYu/base2grob")
